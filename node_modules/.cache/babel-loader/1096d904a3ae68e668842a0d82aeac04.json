{"ast":null,"code":"import _toConsumableArray from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/src/Components/TattooModal.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //Import des composants externes\n\nimport CardTatoo from '../Components/CardTatoo.js';\nimport TattooArtistCardModal from '../Components/TattooArtistCardModal.js'; //Import des librairies ou composants de style\n\nimport '../Stylesheets/TattooModal.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Container, Row, Col } from 'reactstrap';\nimport 'antd/dist/antd.css';\nimport { Modal } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\n\nfunction checkAndAdd(arr, IdTattooSelected) {\n  var found = arr.some(function (el) {\n    return el.tattoo_id === IdTattooSelected;\n  });\n  return found;\n} //// Composant modal qui affiche le tatouage agrandi, les infos tatoueurs et la gallerie des tatouages du tatoueur en question ////\n\n\nvar TattooModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TattooModal, _React$Component);\n\n  function TattooModal(_props) {\n    var _this;\n\n    _classCallCheck(this, TattooModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TattooModal).call(this, _props));\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function (e) {\n      console.log(e);\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      console.log(e);\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.handleLike = function (props) {\n      if (_this.props.userId == null) {\n        alert(\"connecte toi....\");\n      } else {\n        _this.setState({\n          classLike: !_this.state.classLike\n        });\n\n        if (_this.state.classLike == false) {\n          var ctx = _assertThisInitialized(_assertThisInitialized(_this));\n\n          fetch('http://localhost:3000/userliketattoo', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: 'favTattooPhotoLink=' + props.favTattooPhotoLink + '&favTattooStyleList=' + props.favTattooStyleList + '&favArtistID=' + props.artistId + '&user_id=' + ctx.props.userId + '&idPhotoSelected=' + props.idPhotoSelected\n          });\n        } else if (_this.state.classLike == true) {\n          var ctx = _assertThisInitialized(_assertThisInitialized(_this));\n\n          fetch('http://localhost:3000/userdisliketattoo', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: 'idPhotoSelected=' + props.idPhotoSelected + '&user_id=' + ctx.props.userId\n          });\n        }\n      }\n    };\n\n    _this.state = {\n      collapse: false,\n      pictureData: [],\n      visible: false,\n      classLike: false,\n      idPhotoSelected: _this.props.idPhotoSelected\n    };\n    return _this;\n  }\n\n  _createClass(TattooModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.userId != null) {\n        var ctx = this;\n        fetch('http://localhost:3000/user?user_id=' + ctx.props.userId).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (checkAndAdd(data.result.userFavoriteTattoo, ctx.state.idPhotoSelected)) {\n            ctx.setState({\n              classLike: true\n            });\n          } // data.result.userFavoriteTattoo.map(function(map){\n          //   console.log(\"like user\",map.tattoo_id);\n          //   console.log(\"state like user\",ctx.state.idPhotoSelected);\n          //\n          //   if(ctx.state.idPhotoSelected == map.tattoo_id ){\n          //     ctx.setState({classLike: true});\n          //     console.log(\"deja liké\");\n          //   }\n          // })\n\n        }).catch(function (error) {\n          console.log('Request failed', error);\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.clickOnTattoo !== prevProps.clickOnTattoo && this.props.clickOnTattoo === true) {\n        this.setState({\n          visible: true\n        });\n        var ctx = this; // Récupération de la liste des tatouages du tatoueur en question\n\n        fetch('http://localhost:3000/tattoosfromartist?artistID=' + ctx.props.artistId).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          console.log(data);\n\n          var pictureDataCopy = _toConsumableArray(ctx.state.pictureData);\n\n          data.map(function (map) {\n            pictureDataCopy.push(map);\n          });\n          ctx.setState({\n            pictureData: pictureDataCopy\n          });\n        }).catch(function (error) {\n          console.log('Request failed', error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classLike = [\"tattooLikeModal\"];\n      var pictureList = this.state.pictureData.map(function (map, i) {\n        return React.createElement(CardTatoo, {\n          key: i,\n          idPicture: map._id,\n          tattooPhotoLink: map.tattooPhotoLink,\n          artistId: map.artistID,\n          tattooStyleList: map.tattooStyleList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        });\n      });\n\n      if (this.state.classLike) {\n        classLike.push(\"tatoo-liked\");\n        console.log(\"change of state\");\n      }\n\n      return React.createElement(Modal, {\n        title: \"INFO TATOUAGE\",\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        width: \"90%\",\n        footer: null,\n        centered: true,\n        bodyStyle: {\n          backgroundColor: \"#F7F7F7\",\n          fontFamily: 'Roboto Condensed'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Row, {\n        id: \"tattooImageAndArtistInfoBoxModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"7\",\n        id: \"tattooImageBoxModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.favTattooPhotoLink,\n        id: \"tattooImageModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(FontAwesomeIcon, {\n        onClick: function onClick() {\n          return _this2.handleLike(_this2.props);\n        },\n        icon: faHeart,\n        className: this.state.classLike ? \"tattooLikeModal tatoo-liked\" : \"tattooLikeModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: \"12\",\n        md: {\n          size: \"5\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(TattooArtistCardModal, {\n        artistId: this.props.artistId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        id: \"separationModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"AUTRES TATOUAGES DU MEME ARTISTE\"), React.createElement(Row, {\n        id: \"otherArtistImagesBoxModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, pictureList)));\n    }\n  }]);\n\n  return TattooModal;\n}(React.Component);\n\nfunction mapStateToProps(store) {\n  return {\n    userId: store.user._id\n  };\n}\n\nexport default connect(mapStateToProps, null)(TattooModal);","map":{"version":3,"sources":["/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/src/Components/TattooModal.js"],"names":["React","Component","connect","CardTatoo","TattooArtistCardModal","Button","Container","Row","Col","Modal","FontAwesomeIcon","faHeart","checkAndAdd","arr","IdTattooSelected","found","some","el","tattoo_id","TattooModal","props","showModal","setState","visible","handleOk","e","console","log","handleCancel","handleLike","userId","alert","classLike","state","ctx","fetch","method","headers","body","favTattooPhotoLink","favTattooStyleList","artistId","idPhotoSelected","collapse","pictureData","then","response","json","data","result","userFavoriteTattoo","catch","error","prevProps","clickOnTattoo","pictureDataCopy","map","push","pictureList","i","_id","tattooPhotoLink","artistID","tattooStyleList","backgroundColor","fontFamily","size","mapStateToProps","store","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\n//Import des composants externes\nimport CardTatoo from '../Components/CardTatoo.js';\nimport TattooArtistCardModal from '../Components/TattooArtistCardModal.js';\n\n//Import des librairies ou composants de style\nimport '../Stylesheets/TattooModal.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button, Container, Row, Col} from 'reactstrap';\n\nimport 'antd/dist/antd.css';\nimport { Modal } from 'antd';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\n\nfunction checkAndAdd(arr,IdTattooSelected) {\n  var found = arr.some(function (el) {\n    return el.tattoo_id === IdTattooSelected;\n  });\n  return found\n }\n//// Composant modal qui affiche le tatouage agrandi, les infos tatoueurs et la gallerie des tatouages du tatoueur en question ////\n\nclass TattooModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false ,\n      pictureData:[],\n      visible: false,\n      classLike: false,\n      idPhotoSelected: this.props.idPhotoSelected,\n    };\n  }\n\n  componentDidMount(){\n\n\n    if(this.props.userId != null){\n      var ctx = this;\n      fetch('http://localhost:3000/user?user_id='+ctx.props.userId)\n      .then(function(response) {\n       return response.json();\n      })\n      .then(function(data) {\n        if (checkAndAdd(data.result.userFavoriteTattoo,ctx.state.idPhotoSelected)) {\n          ctx.setState({classLike: true});\n\n        } \n        // data.result.userFavoriteTattoo.map(function(map){\n        //   console.log(\"like user\",map.tattoo_id);\n        //   console.log(\"state like user\",ctx.state.idPhotoSelected);\n        //\n        //   if(ctx.state.idPhotoSelected == map.tattoo_id ){\n        //     ctx.setState({classLike: true});\n        //     console.log(\"deja liké\");\n        //   }\n        // })\n\n      })\n      .catch(function(error) {\n       console.log('Request failed', error)\n      });\n    }\n  }\n\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  }\n\n  handleOk = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  }\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  }\n\n  handleLike = (props) =>{\n    if(this.props.userId == null){\n      alert(\"connecte toi....\")\n    }else{\n      this.setState({classLike: !this.state.classLike});\n\n\n      if(this.state.classLike == false){\n        var ctx = this;\n        fetch('http://localhost:3000/userliketattoo', {\n        method: 'PUT',\n        headers: {'Content-Type':'application/x-www-form-urlencoded'},\n        body: 'favTattooPhotoLink='+props.favTattooPhotoLink+'&favTattooStyleList='+props.favTattooStyleList+'&favArtistID='+props.artistId+'&user_id='+ctx.props.userId+'&idPhotoSelected='+props.idPhotoSelected\n        });\n      } else if(this.state.classLike == true){\n        var ctx = this;\n        fetch('http://localhost:3000/userdisliketattoo', {\n        method: 'PUT',\n        headers: {'Content-Type':'application/x-www-form-urlencoded'},\n        body: 'idPhotoSelected='+props.idPhotoSelected+'&user_id='+ctx.props.userId\n        });\n      }\n    }\n   }\n\n  componentDidUpdate(prevProps){\n    if (this.props.clickOnTattoo!==prevProps.clickOnTattoo && this.props.clickOnTattoo === true) {\n      this.setState({\n        visible : true,\n      })\n      var ctx = this;\n      // Récupération de la liste des tatouages du tatoueur en question\n      fetch('http://localhost:3000/tattoosfromartist?artistID='+ctx.props.artistId)\n      .then(function(response) {\n       return response.json();\n      })\n      .then(function(data) {\n        console.log(data);\n       var pictureDataCopy = [...ctx.state.pictureData]\n       data.map(function(map){\n         pictureDataCopy.push(map)\n       })\n       ctx.setState({ pictureData: pictureDataCopy});\n      })\n      .catch(function(error) {\n       console.log('Request failed', error)\n      });\n    }\n  }\n\n  render() {\n    let classLike = [\"tattooLikeModal\"]\n\n\n    let pictureList = this.state.pictureData.map(function(map, i){\n      return <CardTatoo\n        key={i}\n        idPicture={map._id}\n        tattooPhotoLink={map.tattooPhotoLink}\n        artistId={map.artistID}\n        tattooStyleList={map.tattooStyleList} />\n    })\n\n\n\n    if(this.state.classLike){\n      classLike.push(\"tatoo-liked\");\n      console.log(\"change of state\");\n    }\n\n\n    return (\n      <Modal\n        title= \"INFO TATOUAGE\"\n        visible={this.state.visible}\n        onOk={this.handleOk}\n        onCancel={this.handleCancel}\n        width = \"90%\"\n        footer = {null}\n        centered = {true}\n        bodyStyle = {{backgroundColor : \"#F7F7F7\", fontFamily: 'Roboto Condensed'}}\n      >\n        <Container>\n          <Row id=\"tattooImageAndArtistInfoBoxModal\">\n            <Col xs=\"12\" md=\"7\" id=\"tattooImageBoxModal\">\n              <img src={this.props.favTattooPhotoLink} id=\"tattooImageModal\"/>\n              <FontAwesomeIcon onClick={() => this.handleLike(this.props)} icon={faHeart} className={this.state.classLike ? \"tattooLikeModal tatoo-liked\" : \"tattooLikeModal\"}/>\n            </Col>\n            <Col xs=\"12\" md={{size: \"5\"}} >\n              <TattooArtistCardModal artistId={this.props.artistId} />\n            </Col>\n          </Row>\n          <hr id=\"separationModal\"/>\n          <h1>AUTRES TATOUAGES DU MEME ARTISTE</h1>\n          <Row id=\"otherArtistImagesBoxModal\">\n            {pictureList}\n          </Row>\n        </Container>\n      </Modal>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { userId: store.user._id,\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(TattooModal);\n"]},"metadata":{},"sourceType":"module"}