{"ast":null,"code":"import _classCallCheck from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/src/Components/ProjectForm.js\";\n//Alimente le modal envoyé au tatoueur depuis le UserPage/FavTattoosProfile et depuis TattooModal/TattooArtistCardModal\nimport React from 'react'; //material UI\n\nimport { Step, Stepper, StepLabel, StepContent } from 'material-ui/Stepper';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'; //reactstrap\n\nimport { Modal, ModalHeader, ModalBody, Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport { connect } from 'react-redux'; // class ProjectForm extends React.Component {\n//  constructor(props){\n//    super(props);\n//    this.handleNext = this.handleNext.bind(this);\n//    this.handlePrev = this.handlePrev.bind(this);\n//    this.handleChange = this.handleChange.bind(this);\n//    this.renderStepActions = this.renderStepActions.bind(this);\n//    this.toggle = this.toggle.bind(this);\n//    this.state ={\n//      finished: false,\n//      stepIndex: 0,\n//      description: \"\",\n//      phone:\"\",\n//      value: \"Définissez un créneau\",\n//      visible: false,\n//      artistName:'',\n//      artistEmail:''\n//    }\n//  }\n//\n//  toggle() {\n//    this.setState({\n//        visible:!this.state.visible\n//      });\n//  }\n// componentDidMount(){\n//   var ctx = this;\n// //collecter les informations de l'artiste depuis la DB\n//   fetch('http://localhost:3000/artist?artist_id='+this.props.artistId)\n//   .then(function(response) {\n//     return response.json();\n//   })\n//   .then(function(data) {\n//      ctx.setState({\n//        artistName: data.result.artistNickname,\n//        artistEmail: 'wguerrouani@gmail.com'\n//      })\n//      })\n//    .catch(function(error) {\n//     console.log('Request failed', error);\n//   });\n// }\n//\n// componentDidUpdate(prevProps){\n//   if(this.props.clickToSend !==prevProps.clickToSend){\n//     this.setState({\n//       visible: !this.state.visible\n//     })\n//   }\n// }\n//\n//  handleChange(event,index, value) {\n//      this.setState({\n//        [event.target.name]: event.target.value\n//      });\n//    }\n//\n//\n// //fetch update à mettre en place pour BDD User\n//   handleNext(){\n//     console.log(\"this.state\", this.state);\n//   var ctx = this;\n//     fetch('http://localhost:3000/newlead', {\n//       method: 'POST',\n//       headers: {'Content-Type':'application/x-www-form-urlencoded'},\n//       body: 'userID='+this.props.userID +'&artistID='+this.props.artistId +'&dateLead='+ Date.now()\n//     });\n//\n//\n//     if(this.state.stepIndex=== 2){\n//       console.log(\"this.props.userEmail ==>\" + this.props.userEmail + \"this.state.artistName==>\" + this.state.artistName + \"this.props.userTelephone\" + this.state.phone);\n//\n//       //wguerrouani@gmail.com\n//\n//     //si on est sur la dernière page du form, envoyer les informations (user depuis le Store et tatoueur depuis la DB) au tatoueur à travers Zapier\n//       fetch('https://hooks.zapier.com/hooks/catch/4067341/cbsyve/', {\n//       method: 'POST',\n//       headers: {'Content-Type':'application/x-www-form-urlencoded'},\n//       body: 'artistName=' + this.state.artistName +'&artistEmail='+ this.state.artistEmail +'&userFirstName=' + this.props.userFirstName + '&userEmail=' + this.props.userEmail +'&userTelephone='+this.state.phone + '&userTattooDescription=' + this.state.description + '&userAvailability=' + this.state.value + '&userFavoriteTattoo=' + this.props.userFavoriteTattoo\n//     })\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(function(data) {\n//         console.log(data)\n//          ctx.setState({\n//            stepIndex: this.state.stepIndex + 1,\n//            finished: this.state.stepIndex >= 2\n//          })\n//          })\n//        .catch(function(error) {\n//         console.log('Request failed', error);\n//       });\n//     }else{\n//       ctx.setState({\n//         stepIndex: this.state.stepIndex + 1,\n//         finished: this.state.stepIndex >= 2\n//       })\n//     }\n//   };\n//\n//   handlePrev(){\n//     if (this.state.stepIndex > 0){\n//       this.setState({\n//         stepIndex: this.state.stepIndex - 1\n//       });\n//     }\n//   };\n//\n//   renderStepActions(step) {\n//     const {stepIndex} = this.state;\n//\n//     return (\n//       <div style={{margin: '12px 0'}}>\n//         <RaisedButton\n//           label={stepIndex === 2 ? 'Envoyer':'Suivant'}\n//           disableTouchRipple={true}\n//           disableFocusRipple={true}\n//           primary={true}\n//           onClick={this.handleNext}\n//           style={{marginRight: 12}}\n//         />\n//         {step > 0 && (\n//           <FlatButton\n//             label=\"Précédent\"\n//             disabled={stepIndex === 0}\n//             disableTouchRipple={true}\n//             disableFocusRipple={true}\n//             onClick={this.handlePrev}\n//           />\n//         )}\n//       </div>\n//     );\n//   }\n//\n//   render() {\n//     console.log(\"userID donc store OK\", this.props.userID);\n//     const {finished, stepIndex, description, phone, availability} = this.state;\n//     return (\n//   <MuiThemeProvider>\n//     {/* <Button color=\"danger\" onClick={this.toggle}>Formulaire</Button> */}\n//     <div style={{maxHeight: 400, margin: 'auto'}}>\n//     <Modal isOpen={this.state.visible} toggle={this.toggle}>\n//       <ModalHeader toggle={this.toggle}></ModalHeader>\n//       <ModalBody>\n//\n//         <Stepper activeStep={stepIndex} orientation=\"vertical\">\n//           <Step>\n//             <StepLabel className=\"stepLabelForm\">Décrivez votre projet</StepLabel>\n//             <StepContent>\n//               <TextField\n//                 name=\"description\"\n//                 hintText=\"ex : une fleur en dot sur l'omoplate\"\n//                 multiLine={true}\n//                 floatingLabelText=\"Parlez nous de votre projet\"\n//                 rows={2}\n//                 rowsMax={3}\n//                 fullWidth={true}\n//                 onChange={this.handleChange}\n//                 value={this.state.description}\n//               />\n//               {this.renderStepActions(0)}\n//             </StepContent>\n//           </Step>\n//           <Step>\n//             <StepLabel className=\"stepLabelForm\">Pour être contacté</StepLabel>\n//             <StepContent>\n//               <TextField\n//                 name=\"phone\"\n//                 floatingLabelFixed=\"Votre numéro de téléphone\"\n//                 floatingLabelText=\"Laissez votre numéro au tatoueur\"\n//                 hintText=\"(+33)6 61 23 45 67\"\n//                 fullWidth={true}\n//                 onChange={this.handleChange}\n//                 value={this.state.phone}\n//               />\n//             {this.renderStepActions(1)}\n//             </StepContent>\n//           </Step>\n//           <Step>\n//             <StepLabel className=\"stepLabelForm\">Vous préférez être contacté</StepLabel>\n//             <StepContent>\n//               <SelectField\n//                   name=\"availability\"\n//                   fullWidth={true}\n//                   onChange={this.handleChange}\n//                   value={this.state.value}\n//                 >\n//                   <MenuItem value=\"Définissez un créneau\" primaryText=\"Définissez un créneau\" />\n//                   <MenuItem value=\"midi (entre 12h et 14h)\" primaryText=\"midi (entre 12h et 14h)\" />\n//                   <MenuItem value=\"après-midi (entre 14h et 17h)\" primaryText=\"après-midi (entre 14h et 17h)\" />\n//                   <MenuItem value=\"soir (entre 17h et 19h)\" primaryText=\"soir (entre 17h et 19h)\" />\n//               </SelectField>\n//               {this.renderStepActions(2)}\n//             </StepContent>\n//           </Step>\n//         </Stepper>\n//\n//         {finished && (<p style={{margin: '20px 0', textAlign: 'center'}}>\n//             Votre demande a bien été envoyée !\n//                     </p>\n//             )}\n//\n//       </ModalBody>\n//     </Modal>\n//     </div>\n//   </MuiThemeProvider>\n//     );\n//   }\n// }\n//\n// function mapStateToProps(store) {\n//   console.log(\"user depuis le reducer\", store.user);\n//   return {\n//     userID: store.user._id,\n//     userFirstName: store.user.userFirstName,\n//     userEmail: store.user.userEmail,\n//     userTelephone: store.user.userTelephone,\n//     userFavoriteTattoo: store.user.userFavoriteTattoo,\n//     userTattooDescription: store.user.userTattooDescription,\n//     userAvailability: store.user.userAvailability\n//   }\n//\n//\n// }\n//\n// export default connect(\n//     mapStateToProps,\n//     null\n// )(ProjectForm);\n\nvar ProjectForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectForm, _React$Component);\n\n  function ProjectForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      finished: false,\n      stepIndex: 0\n    };\n\n    _this.handleNext = function () {\n      var stepIndex = _this.state.stepIndex;\n\n      _this.setState({\n        stepIndex: stepIndex + 1,\n        finished: stepIndex >= 2\n      });\n    };\n\n    _this.handlePrev = function () {\n      var stepIndex = _this.state.stepIndex;\n\n      if (stepIndex > 0) {\n        _this.setState({\n          stepIndex: stepIndex - 1\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjectForm, [{\n    key: \"renderStepActions\",\n    value: function renderStepActions(step) {\n      var stepIndex = this.state.stepIndex;\n      return React.createElement(\"div\", {\n        style: {\n          margin: '12px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(RaisedButton, {\n        label: stepIndex === 2 ? 'Finish' : 'Next',\n        disableTouchRipple: true,\n        disableFocusRipple: true,\n        primary: true,\n        onClick: this.handleNext,\n        style: {\n          marginRight: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), step > 0 && React.createElement(FlatButton, {\n        label: \"Back\",\n        disabled: stepIndex === 0,\n        disableTouchRipple: true,\n        disableFocusRipple: true,\n        onClick: this.handlePrev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          finished = _this$state.finished,\n          stepIndex = _this$state.stepIndex;\n      return React.createElement(\"div\", {\n        style: {\n          maxWidth: 380,\n          maxHeight: 400,\n          margin: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        activeStep: stepIndex,\n        orientation: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Step, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(StepLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Select campaign settings\"), React.createElement(StepContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"For each ad campaign that you create, you can control how much you're willing to spend on clicks and conversions, which networks and geographical locations you want your ads to show on, and more.\"), this.renderStepActions(0))), React.createElement(Step, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(StepLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Create an ad group\"), React.createElement(StepContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"An ad group contains one or more ads which target a shared set of keywords.\"), this.renderStepActions(1))), React.createElement(Step, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(StepLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Create an ad\"), React.createElement(StepContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Try out different ad text to see what brings in the most customers, and learn how to enhance your ads using features like ad extensions. If you run into any problems with your ads, find out how to tell if they're running and how to resolve approval issues.\"), this.renderStepActions(2)))), finished && React.createElement(\"p\", {\n        style: {\n          margin: '20px 0',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this2.setState({\n            stepIndex: 0,\n            finished: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Click here\"), \" to reset the example.\"));\n    }\n  }]);\n\n  return ProjectForm;\n}(React.Component);\n\nexport default ProjectForm;","map":{"version":3,"sources":["/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/src/Components/ProjectForm.js"],"names":["React","Step","Stepper","StepLabel","StepContent","TextField","RaisedButton","FlatButton","MuiThemeProvider","Modal","ModalHeader","ModalBody","Button","SelectField","MenuItem","connect","ProjectForm","state","finished","stepIndex","handleNext","setState","handlePrev","step","margin","marginRight","maxWidth","maxHeight","renderStepActions","textAlign","event","preventDefault","Component"],"mappings":";;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,SAHF,EAIEC,WAJF,QAKO,qBALP;AAMA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,YAAtD;AACA,OAAO,kCAAP;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAAQC,OAAR,QAAsB,aAAta,YAAM;AAAA,UACVD,SADU,GACG,MAAKF,KADR,CACVE,SADU;;AAEjB,YAAKE,QAAL,CAAc;AACZF,QAAAA,SAAS,EAAEA,SAAS,GAAG,CADX;AAEZD,QAAAA,QAAQ,EAAEC,SAAS,IAAI;AAFX,OAAd;AAID,K;;UAEDG,U,GAAa,YAAM;AAAA,UACVH,SADU,GACG,MAAKF,KADR,CACVE,SADU;;AAEjB,UAAIA,SAAS,GAAG,CAAhB,EAAmB;AACjB,cAAKE,QAAL,CAAc;AAACF,UAAAA,SAAS,EAAEA,SAAS,GAAG;AAAxB,SAAd;AACD;AACF,K;;;;;;;sCAEiBI,I,EAAM;AAAA,UACfJ,SADe,GACF,KAAKF,KADH,CACfE,SADe;AAGtB,aACE;AAAK,QAAA,KAAK,EAAE;AAACK,UAAAA,MAAM,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAEL,SAAS,KAAK,CAAd,GAAkB,QAAlB,GAA6B,MADtC;AAEE,QAAA,kBAAkB,EAAE,IAFtB;AAGE,QAAA,kBAAkB,EAAE,IAHtB;AAIE,QAAA,OAAO,EAAE,IAJX;AAKE,QAAA,OAAO,EAAE,KAAKC,UALhB;AAME,QAAA,KAAK,EAAE;AAACK,UAAAA,WAAW,EAAE;AAAd,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASGF,IAAI,GAAG,CAAP,IACC,oBAAC,UAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,QAAQ,EAAEJ,SAAS,KAAK,CAF1B;AAGE,QAAA,kBAAkB,EAAE,IAHtB;AAIE,QAAA,kBAAkB,EAAE,IAJtB;AAKE,QAAA,OAAO,EAAE,KAAKG,UALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADF;AAqBD;;;6BAEQ;AAAA;;AAAA,wBACuB,KAAKL,KAD5B;AAAA,UACAC,QADA,eACAA,QADA;AAAA,UACUC,SADV,eACUA,SADV;AAGP,aACE;AAAK,QAAA,KAAK,EAAE;AAACO,UAAAA,QAAQ,EAAE,GAAX;AAAgBC,UAAAA,SAAS,EAAE,GAA3B;AAAgCH,UAAAA,MAAM,EAAE;AAAxC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAEL,SAArB;AAAgC,QAAA,WAAW,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+MADF,EAMG,KAAKS,iBAAL,CAAuB,CAAvB,CANH,CAFF,CADF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFADF,EAEG,KAAKA,iBAAL,CAAuB,CAAvB,CAFH,CAFF,CAZF,EAmBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4QADF,EAOG,KAAKA,iBAAL,CAAuB,CAAvB,CAPH,CAFF,CAnBF,CADF,EAiCGV,QAAQ,IACP;AAAG,QAAA,KAAK,EAAE;AAACM,UAAAA,MAAM,EAAE,QAAT;AAAmBK,UAAAA,SAAS,EAAE;AAA9B,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAClBA,UAAAA,KAAK,CAACC,cAAN;;AACA,UAAA,MAAI,CAACV,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAE,CAAZ;AAAeD,YAAAA,QAAQ,EAAE;AAAzB,WAAd;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,2BAlCJ,CADF;AAiDD;;;;EApGuBlB,KAAK,CAACgC,S;;AAuGhC,eAAehB,WAAf","sourcesContent":["//Alimente le modal envoyé au tatoueur depuis le UserPage/FavTattoosProfile et depuis TattooModal/TattooArtistCardModal\n\nimport React from 'react';\n\n//material UI\nimport {\n  Step,\n  Stepper,\n  StepLabel,\n  StepContent,\n} from 'material-ui/Stepper';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\n//reactstrap\nimport { Modal, ModalHeader, ModalBody, Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\n\nimport {connect} from 'react-redux';\n\n\n// class ProjectForm extends React.Component {\n//  constructor(props){\n//    super(props);\n//    this.handleNext = this.handleNext.bind(this);\n//    this.handlePrev = this.handlePrev.bind(this);\n//    this.handleChange = this.handleChange.bind(this);\n//    this.renderStepActions = this.renderStepActions.bind(this);\n//    this.toggle = this.toggle.bind(this);\n//    this.state ={\n//      finished: false,\n//      stepIndex: 0,\n//      description: \"\",\n//      phone:\"\",\n//      value: \"Définissez un créneau\",\n//      visible: false,\n//      artistName:'',\n//      artistEmail:''\n//    }\n//  }\n//\n//  toggle() {\n//    this.setState({\n//        visible:!this.state.visible\n//      });\n//  }\n// componentDidMount(){\n//   var ctx = this;\n// //collecter les informations de l'artiste depuis la DB\n//   fetch('http://localhost:3000/artist?artist_id='+this.props.artistId)\n//   .then(function(response) {\n//     return response.json();\n//   })\n//   .then(function(data) {\n//      ctx.setState({\n//        artistName: data.result.artistNickname,\n//        artistEmail: 'wguerrouani@gmail.com'\n//      })\n//      })\n//    .catch(function(error) {\n//     console.log('Request failed', error);\n//   });\n// }\n//\n// componentDidUpdate(prevProps){\n//   if(this.props.clickToSend !==prevProps.clickToSend){\n//     this.setState({\n//       visible: !this.state.visible\n//     })\n//   }\n// }\n//\n//  handleChange(event,index, value) {\n//      this.setState({\n//        [event.target.name]: event.target.value\n//      });\n//    }\n//\n//\n// //fetch update à mettre en place pour BDD User\n//   handleNext(){\n//     console.log(\"this.state\", this.state);\n//   var ctx = this;\n//     fetch('http://localhost:3000/newlead', {\n//       method: 'POST',\n//       headers: {'Content-Type':'application/x-www-form-urlencoded'},\n//       body: 'userID='+this.props.userID +'&artistID='+this.props.artistId +'&dateLead='+ Date.now()\n//     });\n//\n//\n//     if(this.state.stepIndex=== 2){\n//       console.log(\"this.props.userEmail ==>\" + this.props.userEmail + \"this.state.artistName==>\" + this.state.artistName + \"this.props.userTelephone\" + this.state.phone);\n//\n//       //wguerrouani@gmail.com\n//\n//     //si on est sur la dernière page du form, envoyer les informations (user depuis le Store et tatoueur depuis la DB) au tatoueur à travers Zapier\n//       fetch('https://hooks.zapier.com/hooks/catch/4067341/cbsyve/', {\n//       method: 'POST',\n//       headers: {'Content-Type':'application/x-www-form-urlencoded'},\n//       body: 'artistName=' + this.state.artistName +'&artistEmail='+ this.state.artistEmail +'&userFirstName=' + this.props.userFirstName + '&userEmail=' + this.props.userEmail +'&userTelephone='+this.state.phone + '&userTattooDescription=' + this.state.description + '&userAvailability=' + this.state.value + '&userFavoriteTattoo=' + this.props.userFavoriteTattoo\n//     })\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(function(data) {\n//         console.log(data)\n//          ctx.setState({\n//            stepIndex: this.state.stepIndex + 1,\n//            finished: this.state.stepIndex >= 2\n//          })\n//          })\n//        .catch(function(error) {\n//         console.log('Request failed', error);\n//       });\n//     }else{\n//       ctx.setState({\n//         stepIndex: this.state.stepIndex + 1,\n//         finished: this.state.stepIndex >= 2\n//       })\n//     }\n//   };\n//\n//   handlePrev(){\n//     if (this.state.stepIndex > 0){\n//       this.setState({\n//         stepIndex: this.state.stepIndex - 1\n//       });\n//     }\n//   };\n//\n//   renderStepActions(step) {\n//     const {stepIndex} = this.state;\n//\n//     return (\n//       <div style={{margin: '12px 0'}}>\n//         <RaisedButton\n//           label={stepIndex === 2 ? 'Envoyer':'Suivant'}\n//           disableTouchRipple={true}\n//           disableFocusRipple={true}\n//           primary={true}\n//           onClick={this.handleNext}\n//           style={{marginRight: 12}}\n//         />\n//         {step > 0 && (\n//           <FlatButton\n//             label=\"Précédent\"\n//             disabled={stepIndex === 0}\n//             disableTouchRipple={true}\n//             disableFocusRipple={true}\n//             onClick={this.handlePrev}\n//           />\n//         )}\n//       </div>\n//     );\n//   }\n//\n//   render() {\n//     console.log(\"userID donc store OK\", this.props.userID);\n//     const {finished, stepIndex, description, phone, availability} = this.state;\n//     return (\n//   <MuiThemeProvider>\n//     {/* <Button color=\"danger\" onClick={this.toggle}>Formulaire</Button> */}\n//     <div style={{maxHeight: 400, margin: 'auto'}}>\n//     <Modal isOpen={this.state.visible} toggle={this.toggle}>\n//       <ModalHeader toggle={this.toggle}></ModalHeader>\n//       <ModalBody>\n//\n//         <Stepper activeStep={stepIndex} orientation=\"vertical\">\n//           <Step>\n//             <StepLabel className=\"stepLabelForm\">Décrivez votre projet</StepLabel>\n//             <StepContent>\n//               <TextField\n//                 name=\"description\"\n//                 hintText=\"ex : une fleur en dot sur l'omoplate\"\n//                 multiLine={true}\n//                 floatingLabelText=\"Parlez nous de votre projet\"\n//                 rows={2}\n//                 rowsMax={3}\n//                 fullWidth={true}\n//                 onChange={this.handleChange}\n//                 value={this.state.description}\n//               />\n//               {this.renderStepActions(0)}\n//             </StepContent>\n//           </Step>\n//           <Step>\n//             <StepLabel className=\"stepLabelForm\">Pour être contacté</StepLabel>\n//             <StepContent>\n//               <TextField\n//                 name=\"phone\"\n//                 floatingLabelFixed=\"Votre numéro de téléphone\"\n//                 floatingLabelText=\"Laissez votre numéro au tatoueur\"\n//                 hintText=\"(+33)6 61 23 45 67\"\n//                 fullWidth={true}\n//                 onChange={this.handleChange}\n//                 value={this.state.phone}\n//               />\n//             {this.renderStepActions(1)}\n//             </StepContent>\n//           </Step>\n//           <Step>\n//             <StepLabel className=\"stepLabelForm\">Vous préférez être contacté</StepLabel>\n//             <StepContent>\n//               <SelectField\n//                   name=\"availability\"\n//                   fullWidth={true}\n//                   onChange={this.handleChange}\n//                   value={this.state.value}\n//                 >\n//                   <MenuItem value=\"Définissez un créneau\" primaryText=\"Définissez un créneau\" />\n//                   <MenuItem value=\"midi (entre 12h et 14h)\" primaryText=\"midi (entre 12h et 14h)\" />\n//                   <MenuItem value=\"après-midi (entre 14h et 17h)\" primaryText=\"après-midi (entre 14h et 17h)\" />\n//                   <MenuItem value=\"soir (entre 17h et 19h)\" primaryText=\"soir (entre 17h et 19h)\" />\n//               </SelectField>\n//               {this.renderStepActions(2)}\n//             </StepContent>\n//           </Step>\n//         </Stepper>\n//\n//         {finished && (<p style={{margin: '20px 0', textAlign: 'center'}}>\n//             Votre demande a bien été envoyée !\n//                     </p>\n//             )}\n//\n//       </ModalBody>\n//     </Modal>\n//     </div>\n//   </MuiThemeProvider>\n//     );\n//   }\n// }\n//\n// function mapStateToProps(store) {\n//   console.log(\"user depuis le reducer\", store.user);\n//   return {\n//     userID: store.user._id,\n//     userFirstName: store.user.userFirstName,\n//     userEmail: store.user.userEmail,\n//     userTelephone: store.user.userTelephone,\n//     userFavoriteTattoo: store.user.userFavoriteTattoo,\n//     userTattooDescription: store.user.userTattooDescription,\n//     userAvailability: store.user.userAvailability\n//   }\n//\n//\n// }\n//\n// export default connect(\n//     mapStateToProps,\n//     null\n// )(ProjectForm);\n\nclass ProjectForm extends React.Component {\n\n  state = {\n    finished: false,\n    stepIndex: 0,\n  };\n\n  handleNext = () => {\n    const {stepIndex} = this.state;\n    this.setState({\n      stepIndex: stepIndex + 1,\n      finished: stepIndex >= 2,\n    });\n  };\n\n  handlePrev = () => {\n    const {stepIndex} = this.state;\n    if (stepIndex > 0) {\n      this.setState({stepIndex: stepIndex - 1});\n    }\n  };\n\n  renderStepActions(step) {\n    const {stepIndex} = this.state;\n\n    return (\n      <div style={{margin: '12px 0'}}>\n        <RaisedButton\n          label={stepIndex === 2 ? 'Finish' : 'Next'}\n          disableTouchRipple={true}\n          disableFocusRipple={true}\n          primary={true}\n          onClick={this.handleNext}\n          style={{marginRight: 12}}\n        />\n        {step > 0 && (\n          <FlatButton\n            label=\"Back\"\n            disabled={stepIndex === 0}\n            disableTouchRipple={true}\n            disableFocusRipple={true}\n            onClick={this.handlePrev}\n          />\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const {finished, stepIndex} = this.state;\n\n    return (\n      <div style={{maxWidth: 380, maxHeight: 400, margin: 'auto'}}>\n        <Stepper activeStep={stepIndex} orientation=\"vertical\">\n          <Step>\n            <StepLabel>Select campaign settings</StepLabel>\n            <StepContent>\n              <p>\n                For each ad campaign that you create, you can control how much\n                you're willing to spend on clicks and conversions, which networks\n                and geographical locations you want your ads to show on, and more.\n              </p>\n              {this.renderStepActions(0)}\n            </StepContent>\n          </Step>\n          <Step>\n            <StepLabel>Create an ad group</StepLabel>\n            <StepContent>\n              <p>An ad group contains one or more ads which target a shared set of keywords.</p>\n              {this.renderStepActions(1)}\n            </StepContent>\n          </Step>\n          <Step>\n            <StepLabel>Create an ad</StepLabel>\n            <StepContent>\n              <p>\n                Try out different ad text to see what brings in the most customers,\n                and learn how to enhance your ads using features like ad extensions.\n                If you run into any problems with your ads, find out how to tell if\n                they're running and how to resolve approval issues.\n              </p>\n              {this.renderStepActions(2)}\n            </StepContent>\n          </Step>\n        </Stepper>\n        {finished && (\n          <p style={{margin: '20px 0', textAlign: 'center'}}>\n            <a\n              href=\"#\"\n              onClick={(event) => {\n                event.preventDefault();\n                this.setState({stepIndex: 0, finished: false});\n              }}\n            >\n              Click here\n            </a> to reset the example.\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProjectForm;\n"]},"metadata":{},"sourceType":"module"}