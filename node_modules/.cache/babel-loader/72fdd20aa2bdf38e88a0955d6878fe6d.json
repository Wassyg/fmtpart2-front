{"ast":null,"code":"import _classCallCheck from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/src/Components/ProjectForm.js\";\nimport React from 'react';\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../Stylesheets/ProjectForm.css';\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport { Step, Stepper, StepLabel, StepContent, StepButton } from 'material-ui/Stepper';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\nvar ProjectForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectForm, _React$Component);\n\n  function ProjectForm() {\n    var _this;\n\n    _classCallCheck(this, ProjectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectForm).call(this));\n    _this.handleNext = _this.handleNext.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePrev = _this.handlePrev.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getStepContent = _this.getStepContent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.setState({\n      finished: false,\n      stepIndex: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(ProjectForm, [{\n    key: \"handleNext\",\n    value: function handleNext() {\n      if (this.state.stepIndex < 2) {\n        this.setState({\n          stepIndex: this.state.stepIndex + 1,\n          finished: this.state.stepIndex >= 2\n        });\n      }\n    }\n  }, {\n    key: \"handlePrev\",\n    value: function handlePrev() {\n      if (this.state.stepIndex > 0) {\n        this.setState({\n          stepIndex: this.state.stepIndex - 1\n        });\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        stepIndex: 0\n      });\n    }\n  }, {\n    key: \"getStepContent\",\n    value: function getStepContent(stepIndex) {\n      switch (this.state.stepIndex) {\n        case 0:\n          return 'Select campaign settings...';\n\n        case 1:\n          return 'What is an ad group anyways?';\n\n        case 2:\n          return 'This is the bit I really care about!';\n\n        default:\n          return 'You\\'re a long way from home sonny jim!';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(MuiThemeProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        activeStep: this.state.stepIndex,\n        linear: false,\n        orientation: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Step, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(StepLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Select campaign settings\"), React.createElement(StepButton, {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Message \\xE0 l'attention des tatoueurs\"), React.createElement(StepContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        hintText: \"ex : une fleur en dot sur l'omoplate\",\n        multiLine: true,\n        rows: 2,\n        rowsMax: 3,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), this.renderStepActions(0))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.finished ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this2.setState({\n            stepIndex: 0,\n            finished: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Click here\"), \" to reset the example.\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.getStepContent(stepIndex)), React.createElement(\"div\", {\n        style: {\n          marginTop: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(FlatButton, {\n        label: \"Back\",\n        disabled: stepIndex === 0,\n        onClick: this.handlePrev,\n        style: {\n          marginRight: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(RaisedButton, {\n        label: stepIndex === 2 ? 'Finish' : 'Next',\n        primary: true,\n        onClick: this.handleNext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })))), React.createElement(Step, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(StepButton, {\n        onClick: function onClick() {\n          return _this2.setState({\n            stepIndex: 0\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Un num\\xE9ro de t\\xE9l\\xE9phone pour vous contacter\"), React.createElement(StepContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        hintText: \"ex : une fleur en dot sur l'omoplate\",\n        multiLine: true,\n        rows: 2,\n        rowsMax: 3,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), this.renderStepActions(0))), React.createElement(TextField, {\n        hintText: \"ex : une fleur en dot sur l'omoplate\",\n        multiLine: true,\n        rows: 2,\n        rowsMax: 3,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        hintText: \"ex : une fleur en dot sur l'omoplate\",\n        multiLine: true,\n        rows: 2,\n        rowsMax: 3,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(SelectField, {\n        floatingLabelText: \"Frequency\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: 1,\n        primaryText: \"Never\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        value: 2,\n        primaryText: \"Every Night\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        value: 3,\n        primaryText: \"Weeknights\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        value: 4,\n        primaryText: \"Weekends\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        value: 5,\n        primaryText: \"Weekly\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        floatingLabelFixed: \"Votre numero de t\\xE9l\\xE9phone\",\n        hintText: \"(+33)6 61 23 45 67\",\n        type: \"number\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ProjectForm;\n}(React.Component); //\n// export default class ProjectForm extends React.Component {\n//   constructor(props) {\n//    super(props);\n//    this.state = {\n//      descriptionText:\"\",\n//      longueurText:\"\",\n//      largeurText:\"\",\n//      stylesTatouagesList2:\"\",\n//      stylesTatouagesList:\"\",\n//      userPhone:\"\",\n//      dateList2:\"\",\n//      dateList1:\"\",\n//      timeList1:\"\",\n//      timeList2:\"\",\n//    }\n//   }\n//\n//\n//   render() {\n//\n//     return (\n//\n//\n//       <form className=\"projectFormContainer col-12\">\n//         {/* <h1> Votre projet de tatouage</h1> */}\n//         <p className=\"intro\">Décrivez votre projet, ces informations, ainsi que les images que vous avez sélectionnées permettront à votre futur tatoueur de préparer au mieux votre premier rendez-vous et de répondre le plus vite possible à vos attentes</p>\n//\n//       <FormGroup className=\"FormGroup description\">\n//           <Label className=\"text\" for=\"description\" type=\"textarea\">Votre projet </Label>\n//         <Input name=\"descriptionText\" className=\"descriptionText\" type=\"textarea\"  id=\"descriptionText\" placeholder=\"Décrivez votre tatouage idéal et ce qu'il représente pour vous\"/>\n//       {/* value={this.state.text} onChange={(value)=>this.setState({text: value})} */}\n//         </FormGroup>\n//\n//\n//       <div className=\"FormGroup sizeTattoos\">\n//         <FormGroup className=\"FormGroup col-12 col-sm-6\">\n//           <Label className=\"text\" for=\"projectSize\">Longueur</Label>\n//           <Input name=\"longueurText\" className=\"rollingList\" name=\"long\" placeholder=\"(environ) en cm\" />\n//         </FormGroup>\n//         <FormGroup className=\"FormGroup col-12 col-sm-6\">\n//           <Label className=\"text\" for=\"projectSize\">Largeur</Label>\n//           <Input name=\"largeurText\" className=\"rollingList\"  name=\"larg\" placeholder=\"(environ) en cm\"  />\n//         </FormGroup>\n//       </div>\n//\n//\n//       <div className=\"FormGroup stylesTatouages\">\n//         <FormGroup>\n//           <Label className=\"text\" for=\"styleSelection\">Style principal</Label>\n//           <Input name=\"stylesTatouagesList\" className=\"rollingList\" type=\"select\" name=\"select\" >\n//             <option>-- choisissez un style --</option>\n//             <option>Japonais</option>\n//             <option>Blackwork, Dotwork, B&G, Fineline</option>\n//             <option>Tribal, Mandala</option>\n//             <option>OldSchool, NeoTraditionnel</option>\n//             <option>PostModern, NewSchool, Cartoon</option>\n//             <option>Realism, Trash, Biomeca</option>\n//           </Input>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label className=\"text\" for=\"styleSelection\">Style secondaire</Label>\n//           <Input name=\"stylesTatouagesList2\" className=\"rollingList\" type=\"select\" name=\"select\" >\n//             <option>-- choisissez un style --</option>\n//             <option>Japonais</option>\n//             <option>Blackwork, Dotwork, B&G, Fineline</option>\n//             <option>Tribal, Mandala</option>\n//             <option>OldSchool, NeoTraditionnel</option>\n//             <option>PostModern, NewSchool, Cartoon</option>\n//             <option>Realism, Trash, Biomeca</option>\n//           </Input>\n//         </FormGroup>\n//       </div>\n//\n//\n//         <FormGroup className=\"FormGroup contactNumber\">\n//            <Label className=\"text telephone\" for=\"userPhone\">Téléphone <span>\n//              Pour que le tatoueur puisse vous contacter</span>\n//            </Label>\n//          <Label className=\"text\" for=\"userPhone\"></Label>\n//           <Input name=\"userPhone\" className=\"numberArea\" type=\"textarea\" name=\"number\"  placeholder=\"(+33)6 61 23 45 67\" />\n//          </FormGroup>\n//\n//\n//       <div className=\"availabilities\">\n//         <FormGroup className=\"FormGroup availabilityForm\">\n//           <Label className=\"text\" for=\"availabilityDate\">Proposez un créneau</Label>\n//           <Input name=\"dateList1\" className=\"dateList\" type=\"date\" name=\"date\" id=\"exampleDate\" placeholder=\"date placeholder\" />\n//           <Input name=\"timeList1\" className=\"dateList\" type=\"time\" name=\"time\" id=\"exampleTime\" placeholder=\"time placeholder\" />\n//         </FormGroup>\n//\n//         <FormGroup className=\"FormGroup availabilityForm\">\n//           <Label className=\"text\" for=\"availabilityDate\">Un autre créneau</Label>\n//           <Input name=\"dateList2\" className=\"dateList\" type=\"date\" name=\"date\" id=\"exampleDate\" placeholder=\"date placeholder\" />\n//           <Input name=\"timeList2\" className=\"dateList\" type=\"time\" name=\"time\" id=\"exampleTime\" placeholder=\"time placeholder\" />\n//         </FormGroup>\n//       </div>\n//\n//\n//         <FormGroup className=\"FormGroup load\">\n//           <Label className=\"textLoad\" for=\"File\">Ajoutez un fichier depuis votre ordinateur</Label>\n//         <Input type=\"file\" name=\"uploadFile\" id=\"exampleFile\" />\n//         </FormGroup>\n//\n//\n//       </form>\n//\n//\n//     );\n//   }\n// }\n\n\nexport { ProjectForm as default };","map":{"version":3,"sources":["/Users/wassimaguerro/Desktop/La Capsule/zz-FindMyTattooMVP/FindMyTattooFront/src/Components/ProjectForm.js"],"names":["React","FormGroup","Label","Input","TextField","SelectField","MenuItem","Step","Stepper","StepLabel","StepContent","StepButton","RaisedButton","FlatButton","MuiThemeProvider","ProjectForm","handleNext","bind","handlePrev","getStepContent","setState","finished","stepIndex","state","handleClick","renderStepActions","event","preventDefault","marginTop","marginRight","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormGroup, Label, Input } from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../Stylesheets/ProjectForm.css';\n\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport {\n  Step,\n  Stepper,\n  StepLabel,\n  StepContent,\n  StepButton } from 'material-ui/Stepper';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\n\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\n\nexport default class ProjectForm extends React.Component {\n  constructor(){\n    super();\n    this.handleNext = this.handleNext.bind(this);\n    this.handlePrev = this.handlePrev.bind(this);\n    this.getStepContent = this.getStepContent.bind(this);\n    this.setState({\n      finished: false,\n      stepIndex: 0,\n    })\n  }\n\n\n    handleNext(){\n      if (this.state.stepIndex < 2) {\n        this.setState({\n          stepIndex: this.state.stepIndex + 1,\n          finished: this.state.stepIndex >= 2\n        });\n      }\n    };\n\n    handlePrev () {\n      if (this.state.stepIndex > 0) {\n        this.setState({stepIndex: this.state.stepIndex - 1});\n      }\n    };\n\n    handleClick(){\n      this.setState({\n        stepIndex: 0\n      })\n    }\n\n    getStepContent(stepIndex) {\n    switch (this.state.stepIndex) {\n      case 0:\n        return 'Select campaign settings...';\n      case 1:\n        return 'What is an ad group anyways?';\n      case 2:\n        return 'This is the bit I really care about!';\n      default:\n        return 'You\\'re a long way from home sonny jim!';\n    }\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider>\n          <Stepper\n            activeStep={this.state.stepIndex}\n            linear={false}\n            orientation=\"vertical\">\n          <Step>\n              <StepLabel>Select campaign settings</StepLabel>\n            <StepButton onClick={this.handleClick}>\n                 Message à l'attention des tatoueurs\n               </StepButton>\n               <StepContent>\n                 <TextField\n                   hintText=\"ex : une fleur en dot sur l'omoplate\"\n                   multiLine={true}\n                   rows={2}\n                   rowsMax={3}\n                   fullWidth={true}\n                 /><br />\n                 {this.renderStepActions(0)}\n               </StepContent>\n             </Step>\n             {/* Avoir si ça marche */}\n             <div>\n          {this.state.finished ? (\n            <p>\n              <a\n                href=\"#\"\n                onClick={(event) => {\n                  event.preventDefault();\n                  this.setState({stepIndex: 0, finished: false});\n                }}\n              >\n                Click here\n              </a> to reset the example.\n            </p>\n          ) : (\n            <div>\n              <p>{this.getStepContent(stepIndex)}</p>\n              <div style={{marginTop: 12}}>\n                <FlatButton\n                  label=\"Back\"\n                  disabled={stepIndex === 0}\n                  onClick={this.handlePrev}\n                  style={{marginRight: 12}}\n                />\n                <RaisedButton\n                  label={stepIndex === 2 ? 'Finish' : 'Next'}\n                  primary={true}\n                  onClick={this.handleNext}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n\n             <Step>\n                  <StepButton onClick={() => this.setState({stepIndex: 0})}>\n                    Un numéro de téléphone pour vous contacter\n                  </StepButton>\n                  <StepContent>\n                    <TextField\n                      hintText=\"ex : une fleur en dot sur l'omoplate\"\n                      multiLine={true}\n                      rows={2}\n                      rowsMax={3}\n                      fullWidth={true}\n                    /><br />\n                    {this.renderStepActions(0)}\n                  </StepContent>\n                </Step>\n\n            {/* <div>Décrivez votre projet de tatouage</div> */}\n            <TextField\n              hintText=\"ex : une fleur en dot sur l'omoplate\"\n              multiLine={true}\n              rows={2}\n              rowsMax={3}\n              fullWidth={true}\n            /><br />\n            <TextField\n              hintText=\"ex : une fleur en dot sur l'omoplate\"\n              multiLine={true}\n              rows={2}\n              rowsMax={3}\n              fullWidth={true}\n            /><br />\n            <SelectField\n                floatingLabelText=\"Frequency\"\n                fullWidth={true}\n              >\n                <MenuItem value={1} primaryText=\"Never\" />\n                <MenuItem value={2} primaryText=\"Every Night\" />\n                <MenuItem value={3} primaryText=\"Weeknights\" />\n                <MenuItem value={4} primaryText=\"Weekends\" />\n                <MenuItem value={5} primaryText=\"Weekly\" />\n              </SelectField>\n              <br />\n\n\n            <TextField\n              floatingLabelFixed=\"Votre numero de téléphone\"\n              hintText=\"(+33)6 61 23 45 67\"\n              type=\"number\"\n              fullWidth={true}\n            /><br />\n        </Stepper>\n    </MuiThemeProvider>\n    )\n  }\n}\n\n//\n// export default class ProjectForm extends React.Component {\n//   constructor(props) {\n//    super(props);\n//    this.state = {\n//      descriptionText:\"\",\n//      longueurText:\"\",\n//      largeurText:\"\",\n//      stylesTatouagesList2:\"\",\n//      stylesTatouagesList:\"\",\n//      userPhone:\"\",\n//      dateList2:\"\",\n//      dateList1:\"\",\n//      timeList1:\"\",\n//      timeList2:\"\",\n//    }\n//   }\n//\n//\n//   render() {\n//\n//     return (\n//\n//\n//       <form className=\"projectFormContainer col-12\">\n//         {/* <h1> Votre projet de tatouage</h1> */}\n//         <p className=\"intro\">Décrivez votre projet, ces informations, ainsi que les images que vous avez sélectionnées permettront à votre futur tatoueur de préparer au mieux votre premier rendez-vous et de répondre le plus vite possible à vos attentes</p>\n//\n//       <FormGroup className=\"FormGroup description\">\n//           <Label className=\"text\" for=\"description\" type=\"textarea\">Votre projet </Label>\n//         <Input name=\"descriptionText\" className=\"descriptionText\" type=\"textarea\"  id=\"descriptionText\" placeholder=\"Décrivez votre tatouage idéal et ce qu'il représente pour vous\"/>\n//       {/* value={this.state.text} onChange={(value)=>this.setState({text: value})} */}\n//         </FormGroup>\n//\n//\n//       <div className=\"FormGroup sizeTattoos\">\n//         <FormGroup className=\"FormGroup col-12 col-sm-6\">\n//           <Label className=\"text\" for=\"projectSize\">Longueur</Label>\n//           <Input name=\"longueurText\" className=\"rollingList\" name=\"long\" placeholder=\"(environ) en cm\" />\n//         </FormGroup>\n//         <FormGroup className=\"FormGroup col-12 col-sm-6\">\n//           <Label className=\"text\" for=\"projectSize\">Largeur</Label>\n//           <Input name=\"largeurText\" className=\"rollingList\"  name=\"larg\" placeholder=\"(environ) en cm\"  />\n//         </FormGroup>\n//       </div>\n//\n//\n//       <div className=\"FormGroup stylesTatouages\">\n//         <FormGroup>\n//           <Label className=\"text\" for=\"styleSelection\">Style principal</Label>\n//           <Input name=\"stylesTatouagesList\" className=\"rollingList\" type=\"select\" name=\"select\" >\n//             <option>-- choisissez un style --</option>\n//             <option>Japonais</option>\n//             <option>Blackwork, Dotwork, B&G, Fineline</option>\n//             <option>Tribal, Mandala</option>\n//             <option>OldSchool, NeoTraditionnel</option>\n//             <option>PostModern, NewSchool, Cartoon</option>\n//             <option>Realism, Trash, Biomeca</option>\n//           </Input>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label className=\"text\" for=\"styleSelection\">Style secondaire</Label>\n//           <Input name=\"stylesTatouagesList2\" className=\"rollingList\" type=\"select\" name=\"select\" >\n//             <option>-- choisissez un style --</option>\n//             <option>Japonais</option>\n//             <option>Blackwork, Dotwork, B&G, Fineline</option>\n//             <option>Tribal, Mandala</option>\n//             <option>OldSchool, NeoTraditionnel</option>\n//             <option>PostModern, NewSchool, Cartoon</option>\n//             <option>Realism, Trash, Biomeca</option>\n//           </Input>\n//         </FormGroup>\n//       </div>\n//\n//\n//         <FormGroup className=\"FormGroup contactNumber\">\n//            <Label className=\"text telephone\" for=\"userPhone\">Téléphone <span>\n//              Pour que le tatoueur puisse vous contacter</span>\n//            </Label>\n//          <Label className=\"text\" for=\"userPhone\"></Label>\n//           <Input name=\"userPhone\" className=\"numberArea\" type=\"textarea\" name=\"number\"  placeholder=\"(+33)6 61 23 45 67\" />\n//          </FormGroup>\n//\n//\n//       <div className=\"availabilities\">\n//         <FormGroup className=\"FormGroup availabilityForm\">\n//           <Label className=\"text\" for=\"availabilityDate\">Proposez un créneau</Label>\n//           <Input name=\"dateList1\" className=\"dateList\" type=\"date\" name=\"date\" id=\"exampleDate\" placeholder=\"date placeholder\" />\n//           <Input name=\"timeList1\" className=\"dateList\" type=\"time\" name=\"time\" id=\"exampleTime\" placeholder=\"time placeholder\" />\n//         </FormGroup>\n//\n//         <FormGroup className=\"FormGroup availabilityForm\">\n//           <Label className=\"text\" for=\"availabilityDate\">Un autre créneau</Label>\n//           <Input name=\"dateList2\" className=\"dateList\" type=\"date\" name=\"date\" id=\"exampleDate\" placeholder=\"date placeholder\" />\n//           <Input name=\"timeList2\" className=\"dateList\" type=\"time\" name=\"time\" id=\"exampleTime\" placeholder=\"time placeholder\" />\n//         </FormGroup>\n//       </div>\n//\n//\n//         <FormGroup className=\"FormGroup load\">\n//           <Label className=\"textLoad\" for=\"File\">Ajoutez un fichier depuis votre ordinateur</Label>\n//         <Input type=\"file\" name=\"uploadFile\" id=\"exampleFile\" />\n//         </FormGroup>\n//\n//\n//       </form>\n//\n//\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}